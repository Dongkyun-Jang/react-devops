{"version":3,"sources":["redux/counter.js","App.js","redux/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","count","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","App","useSelector","counter","dispatch","useDispatch","className","onClick","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"6MAEaA,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GAETC,SAAU,CACRC,UAAW,SAACC,GACVA,EAAMH,OAAS,GAEjBI,UAAW,SAACD,GACVA,EAAMH,OAAS,GAEjBK,kBAAmB,SAACF,EAAOG,GACzBH,EAAMH,OAASM,EAAOC,YAKrB,EAAoDX,EAAaY,QAAzDN,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,kBACtBT,IAAf,Q,OCjBe,SAASa,IACtB,IAAQT,EAAUU,aAAY,SAACP,GAAD,OAAWA,EAAMQ,WAAvCX,MACFY,EAAWC,cAEjB,OACE,sBAAKC,UAAU,MAAf,UACE,iDAAoBd,KACpB,wBAAQe,QAAS,kBAAMH,EAASV,MAAhC,uBACA,wBAAQa,QAAS,kBAAMH,EAASR,MAAhC,uBACA,wBAAQW,QAAS,kBAAMH,EAASP,EAAkB,MAAlD,0CCVSW,kBAAe,CAC5BC,QAAS,CACPN,QAASO,KCEbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAACb,EAAD,QAGJc,SAASC,eAAe,W","file":"static/js/main.a8bb6dd0.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    count: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.count += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.count -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.count += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\nexport default counterSlice.reducer;\r\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { decrement, increment, incrementByAmount } from \"./redux/counter\";\n\nexport default function App() {\n  const { count } = useSelector((state) => state.counter); // 여기서 state는 store.js의 reducer 객체를 의미한다.\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <h1>The Count is : {count}</h1>\n      <button onClick={() => dispatch(increment())}>increment</button>\n      <button onClick={() => dispatch(decrement())}>decrement</button>\n      <button onClick={() => dispatch(incrementByAmount(33))}>\n        Increment specific amount\n      </button>\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"./counter\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}